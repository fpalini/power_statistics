# Sample properties file to be used with the dataset generator of the
# PowerStatistics package. Make a copy of this file, rename it as PowerStatistics.properties
# and modify as needed by the datasets to be generated

# Default Spark application name
powerstatistics.datasetBuilder.appName=DatasetBuilder

# Block size, in bytes, use for creating new distributed files under HDFS
powerstatistics.datasetBuilder.defaultBlockSize=8388608


# String prefix used to label files containing datasets generated under the null model 
powerstatistics.datasetBuilder.uniformPrefix = Uniform

# String suffix used to label files containing datasets generated for Type I check
powerstatistics.datasetBuilder.Type1CheckSuffix = -T1

# Probability distribution used for characters A,C,G,T during the generation step 
powerstatistics.datasetBuilder.uniformDistribution = 0.25, 0.25, 0.25, 0.25


# un numero di caratteri almeno pari al massimo valore di k
# questa sequenza e' stata generata con distribuzione GC Reach
# powerstatistics.datasetBuilder.motif = AGCCAACTACCACCGGGCGTCCTCGGTGCCCGTATAGACGCGGCGCGCGCGCGCAAAGCCCTTCGGG

# reference string used under the MotifReplacement generative models
# it is assumed to contain n motifs of length k 
# where n is evaluated according to the sequence length, to k and to the originating
# probability gamma * 25.000 / 5
# at runtime, this string will be split in a collection of non overlapping substrings,
# with each substring being chosen at random for motif replacement
# the length of these substrings is dictated by the "replacePatternLength" property
powerstatistics.datasetBuilder.motif = ACAGTGACGTATTGTATAAACTTATTAATGATTACGCTTCTTAATTGGACCAGTGCTATCCCGCACCACGGTTACATAGAAGATGTGGCCCACAAGATTCCGTTGCTGTGCTTTAGTGGGTCAGCAGTTCGCTCGCAGGTTTCTCTATCATTAAAGCACATAATCCTGCCAAAACCACTGGGCAAGAGGATAAGTGTCCACACTGCGACCGAGTCGCTTGGTGCACGCAGAAGGTACCTAGCGAACCGACGGTGCATGCTGGCTTCCCGAGGTAAACAACTTGTGGTTAGACAAGTTAATTGGCACACGATACGGGCTAGTCTTCATGCACTTGATATCAATGTAGATACGGCTACGTCGCGTAAGCACAGACTCATCCTGCAGCCGACCGTAGACGTTCATTTGTAGGATTACTCGTCGACAAGAAAGGTTGAAGACCCCGTTCGGGGGCCGAGCAAGCATCTTTCCTAAACTTCGAAGGGTAGTAATTGACTACGTGAAGCGAGGAGCTCGGGCAAAAACTGGTATGGTCAGCAGCTCCACTAATTAGACACAATAGTATACCTAAGGGCCCGCAGGATCGTACGCCGATTTTGCACGCGAGATTTGAGTGAATCGAGTAGAGTTCTTGGCTAGGGGTGTACCCCCTGCCGGCCTCTCTGGACGGGTGGCGGGTTTCATTAACGCTTGCCGCGCCTTAGATCTTATGGACACAGACCTACCAGAAACACTGGGTGGCGGCCTCCGTTCAGTCAGTGTTGTGTTGATTTTGTTAAGAGACGTGCGGCTTTCTAACCTGCCAAACGCCCAATACCAGTAAACACCATCCTAACATTCGTTAGTTAAATGGGGGTCAAGCTGCGGTAATTTGATCCCATAACAATCAGATGAGACTGGACGTGTAACATTGCAAGCGGTGTCCGCTAAAAGTCCATATGGGGCATGCCCTTCCGCAGCTTCGATCCGCTCGCTTGAAGGTTACTAGTTATCTAGCGTTCAGTTAACCAGAACTTCCTTCCAGGCCCGTTTGATGGCTCAGGTCGCCTTCGGCGTAACGGTAACCTCCCGCATGTCCCGTAAGAGGAATTTTCCGAGTGTAGATAGGGACGTTTATGACTGCCGGCGAGCGCGGAACCCAGAAGTAGATTTAGCCCTGCTACTCCATTAACGTTGTCAAGGAGGTATTCTGTAACGGAATGGAGTCTATCTCATAGGAGTTTGGCTGAGGGTCCGCATGAGCAAGGAATACGTCTTTGAGGTGTTGCGACCTAATTGTTTATGATGCCTTCACTATTTAGATTGGGGGAAGTCCCCGGAATGTCAGAGGTTCTCAGTACTAATGGCTTCCAGGGGTAGTGGCGAGGTATCACTTGCGTGGCAAATGACTGAAACAGTAACTAGTTGAGTTTAGCCCTCTCCCAATATATTTGTCTCAGATCAAGCTACGTCAAATCTAAGCGATATGGCGGAAGGCAGCAGTCCAAAGTATTATCACACGCTTAGGAGACTTCAGGTTACAGGAGCCTCGAATCTGTGTGATATGCGAGGCTTGGCAGCTCAAAGGAGCCAGGACTGCTGGGAGCTGCTCTGCCGGAATGGCCGGTACAGACTCCCGCCACGCACGACCATAAGGGATACGGCTAGCAGCTCACGCGATACAGATTACTACGCACATTTGATTAATACTTGTTCATGACAGCTATTGGCTCCATGTTGATTACGCCCTTTACAGGCTTCTCCACGGGGCCGAGGGGGAGACGAGCAGAATGCCCTCACTTCCGCGTAGTACGTCCGATCAAAAGAGTCCTTCCCCCTGTCACAAGCTTTTGCCACTGGCGGCTCTGACCCGCGTTAAATAATTTACGTGAAACGAGAATAGCATGCTCCTATGAAAACGCGAACTCACTCAGCGGCACATCGCGTGGGGGGGAGGGTTCGTGTCTTCAGAACGATTAGAAAGAACTATAATAGGGGGGACCATGCGCAATGAAATCAGGACTTACTAGAACCGACTACGGTGAAAAGAATGTAGGTATGGGGTTTCATATCCTATGGGGTGGTAATTACGTATTTTGAGCGGGTCGCTCAGATGCGTTTCGTCTGAGATCTTATGGATAATAATGGGTGCAGACTCAGTCACAAGATGTAGCAGACGGCGGGATAATGACGTGACCTGTAAGGTAGCTCGGGAAATCTAAGGTATCCCGTTTTAGACGAGTTGAAAAGTGAAGTGTGTGGGTAGGTGAGAAATATTAGCAGCTGCTAGGCGGCCGAACGTAGGAGCAATTTTTTCTTCGATGCTATCCGATCAATGAGTAGTAGGCTCCCACTGCTCTGGCAGATCTGGCGTGAAACAGACTGCAATCGCTGTGATCCATTAATTCATAGTCTCATACGTCAACCCGACGGTTGGACAGCGAGCAGACTCGGTCTGGTCATGGAAGACAGGGGGGCTGTCACGCATCAAGCGACGGCCACCCGCAGCAGTGTTCCCCATTTAAGTGTGCGGCGCGAGAATTTTACCGTGCAGATCCTTTAATGCCCACGGTAGGGGAGACATGGTGGCGGACCGAAAATGTGCAGGAGTCCCCACCATCGCCCGCCTATGACACACGCCTTACTTAATCGGGGTGCTGCGACTATAAGGTTCGATCACTGGCTGCCCCCAGGGCCTATTGTTTCCCCGAGAGCAAGTGATCCTCGATGACTCGCGACCCTGAGATCACAAAGATTCGCGAGAACTTGAGAAAGCAGTCCTTGGGGTCTACTAGAACGAGAGCACTCCCTACCATGCCAAGGGGCACCTGTTGTAGGGCACCACCTTTGCCGTCGGGTAACCTTATCCCGTTCGCGGTACCCTCGATTACGGGGTGCCAAGTGGGGACCAACTCTCAGGGCCGTGTACATTGGGCGACGAGACATCTGAATTCAATGGCGATGCCGAGGTGTTAGTCCATCATATACTGGGCGTTCTATTATTGCAGTGCACTGTAGCCGCATCGATGCCTTCTTTTACAGTAGCGGTCCCTGCTTCCACGAGTTAACTTAGCTCGGCCCTTGGTTTTGGAAAGCTGAAGTGGCAGTGTACAATGGTCCTCTTACATAGTTCTGCGCAGATGTTGAAGCCTTTGCATCTCTGAAGCCGTATAAAGGACCAAGGAGTCTGACTGTAGGGCCCCACATTTCGCAAATCGAATTGGCCGAGAGCTCTTGCTCCTAGACTGGGGAACTCCGACCATTTGGTCGACGTTTATAGTGCCGCTACGTCATAAAATCCACGTACGAATGAATCCCAGAGACGGATTTAGGGTTCCTGCTGCTTCCAGCGAAATATCCCCTTCTTAGGTGATGGTGGCATTCGACTGCCAAAACATTCACGTGATTTGACCGATCCGGGTGATCGGCTTGGGTGTCGTTCGGCAATTTCCGTCGCAACGCCATTATCCCGACCTGGTCTTGTTAGAAATCGAAATTGATGCGATTGTCTGGAACGCAAATCTTGCTTTGAGAGGTACGCCTGAATGCGCTGAGGACGAATGTTCGTGATCCCACGACCCATAAATCGGATTGGCAAAAGGACGAGGCCACTCCGATCAGATTCGAGGCGGGCCCCATGGTAACCAGATGTATAAATGCCAGCTACTAGGAGCAGATCAATTGGAGGGGTTGCGGGATACGGTTCGTCCTGAGCGTCTAACGTTGTGTAAGGAATTGGATCAACCCCATCCCAGCCCACAGGAAAACTCGGAGCGACATCCTCCTGGTCGAGAGTTGCGAGGACACGCTCGTAACGTAGTTATTAAATTACCATCTGCTCCGCCACCCGACACACCACTGGCGGCGAACTGTACACCTATCTTAGGCCGAATAGCCGCCACGTTTCTGAGCGCATTAAAGAGTGGATTGCGTCCGACTTGGTTCCCAGTACGCGATAAGGGAACACGGTGTCGCGACCGAGGTCAGTAACCCCGAAATCGTGTGCGTTGTTGGATTTAGGTTGGGCGCCTGCGAACCCGATTTTCCTTAACTATCTCGGTAGCGGCGGTGCTAGCGATTTATTAACCTCAAGGCAGAATAAATTCGACGACCGCCTTGTGTAGAATCGCACCCGTTTCATTTCTTTCACTTCGTATAACGCTTCATAAAGACTCTAGGCAGCCAGGGCTAATGCGTCCGGATCAGACCACGCGGCCCAAAGGAAGAATCGCACCAGGTCCAAGCGTCAGGACGACTTAACTTGAGCAATTGTGGGCCCCGTGATTAATGGACTCGTCCACAATCTCTTGGAATTTGGTGCTGGTTATAATAATAAATTTGACGTGCAAACGCGCCAGGGACGGCGCACAGAAAATTACATGCTAGTAAGGCGTTCTGAGCGCATGTAGGACTGTAGATACGCCTCAAGAACCGAAAGGGTGTAATGTCTGCTCACTAAGTCGTGATACCTTCTTGAACTACGAGAAGTAGGGACAATAAGCCGACTTTGCGAGGTCTCGGGACCGCCACAGCCTGTCGCTCGCCACTGCGGGTATGGGATTGGTACGTCAACTTGGAACGGCACCCATGATACGTCGAAGTCAGGCACCACTGCGCCGTATTACAGGCGAGACACCAAGGAACCCAACGGTTCTGAATCGAAGCACCTACGGGAAGGAGCAAAAAATCCGGAGGTTTCTGATAAGCTTCTCGCCCCTTAGCGCATATCAATAGTCGTAGCCCTACGTAGACGCAGAACTGCCTCTACTGATTGTCCTCACTTAGGCCTTTTGCTCACATCGGTCCCGGACATAAGAGAATGGAAACCATCGCTTACGGGCTCCTGCGCGAGATCCAAGTGTTGATGTGGATGCACCCGAGAAAGGTGGGTAGCTTATCGTCTGGCATTGGTAGGGTGTCCTGGCGCCACACGAGCACACAGGTCGTAGTGGGGAAACCTCAGAAATCGAAGAATCCATGGTAGATTCTTGTACTGAGAGCTTTCACACAAATGACGTCCAAGG

# String prefix used to label files containing datasets generated under the motif replacement alternative model 
powerstatistics.datasetBuilder.altMotifPrefix = MotifRepl


# reference length used under alternative models for defining, respectively,
# the size of motifs and the size of patterns 
powerstatistics.datasetBuilder.replacePatternLength=10

# String prefix used to label files containing datasets generated under the pattern transfer alternative model 
powerstatistics.datasetBuilder.altPatTransfPrefix = PatTransf


# gamma probabilities used to randomly sample from a Bernoulli distribution the 
# position where to implant motifs and patterns under, respectively
# the motif replacement and the pattern transfer alternative models
powerstatistics.datasetBuilder.gammaProbabilities = 0.01, 0.05, 0.1 

# number of pairs to randomly generate for each dataset
powerstatistics.datasetBuilder.numberOfPairs = 1000

# maximum length, in characters, of all sequences in the datasets to be generated 
powerstatistics.datasetBuilder.maxSequenceLength = 10000000

# length increase, in characters, of all sequences in a new dataset to be generated
# with respect to the previous one
powerstatistics.datasetBuilder.lengthStep = 100000

# Pippo, non c'è una proprietà per la taglia di partenza?
